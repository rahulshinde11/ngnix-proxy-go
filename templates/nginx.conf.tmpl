map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}

# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}

proxy_cache off;
proxy_request_buffering off;

client_max_body_size {{ .Config.ClientMaxBodySize }};

{{ range $hostname, $host := .Hosts }}
{{ range $upstream := $host.Upstreams }}
upstream {{ $upstream.ID }} {
    {{ range $container := $upstream.Containers }}
    server {{ $container.Address }}:{{ $container.Port }};
    {{ end }}
}
{{ end }}

{{ if $host.SSLEnabled }}
server {
    server_name {{ $host.Hostname }};
    listen {{ $host.Port }} ssl {{ if $host.IsDefaultServer }}default_server{{ end }};
    http2 on;
    ssl_certificate /etc/ssl/custom/certs/{{ if eq $host.SSLFile "*" }}*.{{ $host.Hostname }}{{ else }}{{ $host.SSLFile }}{{ end }}.crt;
    ssl_certificate_key /etc/ssl/custom/private/{{ if eq $host.SSLFile "*" }}*.{{ $host.Hostname }}{{ else }}{{ $host.SSLFile }}{{ end }}.key;
    {{ if $host.IsRedirect }}
    return 301 https://{{ $host.RedirectHostname }}$request_uri;
    {{ else if $host.IsDown }}
    return 503;
    {{ else }}
    {{ if $host.BasicAuth }}
    auth_basic "Restricted Access";
    auth_basic_user_file {{ $host.BasicAuthFile }};
    {{ end }}
    {{ range $path, $location := $host.Locations }}
    location {{ $path }} {
        {{ range $config := $location.InjectedConfigs }}
        {{ $config }};
        {{ end }}
        {{ if $location.BasicAuth }}
        auth_basic "Restricted Access";
        auth_basic_user_file {{ $location.BasicAuthFile }};
        {{ end }}
        {{ if $location.UpstreamEnabled }}
        proxy_pass {{ $location.Scheme }}://{{ $location.Upstream }}{{ $location.ContainerPath }};
        {{ else }}
        proxy_pass {{ $location.Scheme }}://{{ $location.ContainerAddress }}:{{ $location.ContainerPort }}{{ $location.ContainerPath }};
        {{ end }}
        {{ if ne $path "/" }}
        proxy_redirect $scheme://$http_host{{ if $location.ContainerPath }}{{ $location.ContainerPath }}{{ else }}/{{ end }} $scheme://$http_host{{ $path }};
        {{ end }}
        {{ if and $location.WebSocket $location.HTTP }}
        proxy_set_header Host $http_host;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
        proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
        {{ else if $location.WebSocket }}
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_read_timeout 1h;
        proxy_send_timeout 1h;
        {{ else }}
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
        proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
        {{ end }}
    }
    {{ end }}
    {{ end }}
}
{{ else }}
server {
    listen {{ $host.Port }} {{ if $host.IsDefaultServer }}default_server{{ end }};
    server_name {{ $host.Hostname }};
    {{ if $host.IsRedirect }}
    return 301 {{ if $host.SSLEnabled }}https{{ else }}http{{ end }}://{{ $host.RedirectHostname }}$request_uri;
    {{ else }}
    {{ range $path, $location := $host.Locations }}
    location {{ $path }} {
        {{ range $config := $location.InjectedConfigs }}
        {{ $config }};
        {{ end }}
        {{ if $location.UpstreamEnabled }}
        proxy_pass {{ $location.Scheme }}://{{ $location.Upstream }}{{ $location.ContainerPath }};
        {{ else }}
        proxy_pass {{ $location.Scheme }}://{{ $location.ContainerAddress }}:{{ $location.ContainerPort }}{{ $location.ContainerPath }};
        {{ end }}
        {{ if ne $path "/" }}
        proxy_redirect $scheme://$http_host{{ if $location.ContainerPath }}{{ $location.ContainerPath }}{{ else }}/{{ end }} $scheme://$http_host{{ $path }};
        {{ end }}
        {{ if and $location.WebSocket $location.HTTP }}
        proxy_set_header Host $http_host;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
        proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
        {{ else if $location.WebSocket }}
        proxy_http_version 1.1;
        proxy_read_timeout 1h;
        proxy_send_timeout 1h;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        {{ else }}
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
        proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
        {{ end }}
    }
    {{ end }}
    location /.well-known/acme-challenge/ {
        alias {{ $.Config.ChallengeDir }};
        try_files $uri =404;
    }
    {{ end }}
}
{{ end }}
{{ if $host.SSLRedirect }}
server {
    listen 80 {{ if $host.IsDefaultServer }}default_server{{ end }};
    server_name {{ $host.Hostname }};
    location /.well-known/acme-challenge/ {
        alias {{ $.Config.ChallengeDir }};
        try_files $uri =404;
    }
    location / {
        {{ if $host.IsRedirect }}
        return 301 https://{{ $host.RedirectHostname }}$request_uri;
        {{ else }}
        return 301 https://$host$request_uri;
        {{ end }}
    }
}
{{ end }}
{{ end }}

{{ if .Config.DefaultServer }}
server {
    listen 80 default_server;
    server_name _;
    location /.well-known/acme-challenge/ {
        alias {{ .Config.ChallengeDir }};
        try_files $uri =404;
    }
    location / {
        return 503;
    }
}
{{ end }} 